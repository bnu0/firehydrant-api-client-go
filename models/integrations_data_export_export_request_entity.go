// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IntegrationsDataExportExportRequestEntity Integrations_DataExport_ExportRequestEntity model
//
// swagger:model Integrations_DataExport_ExportRequestEntity
type IntegrationsDataExportExportRequestEntity struct {

	// created at
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// status
	// Enum: [pending completed errored offline]
	Status string `json:"status,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// window ends at
	// Format: date-time
	WindowEndsAt strfmt.DateTime `json:"window_ends_at,omitempty"`

	// window starts at
	// Format: date-time
	WindowStartsAt strfmt.DateTime `json:"window_starts_at,omitempty"`
}

// Validate validates this integrations data export export request entity
func (m *IntegrationsDataExportExportRequestEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWindowEndsAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWindowStartsAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IntegrationsDataExportExportRequestEntity) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

var integrationsDataExportExportRequestEntityTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","completed","errored","offline"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		integrationsDataExportExportRequestEntityTypeStatusPropEnum = append(integrationsDataExportExportRequestEntityTypeStatusPropEnum, v)
	}
}

const (

	// IntegrationsDataExportExportRequestEntityStatusPending captures enum value "pending"
	IntegrationsDataExportExportRequestEntityStatusPending string = "pending"

	// IntegrationsDataExportExportRequestEntityStatusCompleted captures enum value "completed"
	IntegrationsDataExportExportRequestEntityStatusCompleted string = "completed"

	// IntegrationsDataExportExportRequestEntityStatusErrored captures enum value "errored"
	IntegrationsDataExportExportRequestEntityStatusErrored string = "errored"

	// IntegrationsDataExportExportRequestEntityStatusOffline captures enum value "offline"
	IntegrationsDataExportExportRequestEntityStatusOffline string = "offline"
)

// prop value enum
func (m *IntegrationsDataExportExportRequestEntity) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, integrationsDataExportExportRequestEntityTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IntegrationsDataExportExportRequestEntity) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *IntegrationsDataExportExportRequestEntity) validateWindowEndsAt(formats strfmt.Registry) error {
	if swag.IsZero(m.WindowEndsAt) { // not required
		return nil
	}

	if err := validate.FormatOf("window_ends_at", "body", "date-time", m.WindowEndsAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *IntegrationsDataExportExportRequestEntity) validateWindowStartsAt(formats strfmt.Registry) error {
	if swag.IsZero(m.WindowStartsAt) { // not required
		return nil
	}

	if err := validate.FormatOf("window_starts_at", "body", "date-time", m.WindowStartsAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this integrations data export export request entity based on context it is used
func (m *IntegrationsDataExportExportRequestEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IntegrationsDataExportExportRequestEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IntegrationsDataExportExportRequestEntity) UnmarshalBinary(b []byte) error {
	var res IntegrationsDataExportExportRequestEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
