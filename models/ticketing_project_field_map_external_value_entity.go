// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TicketingProjectFieldMapExternalValueEntity ticketing project field map external value entity
//
// swagger:model Ticketing_ProjectFieldMapExternalValueEntity
type TicketingProjectFieldMapExternalValueEntity struct {

	// attribute
	Attribute string `json:"attribute,omitempty"`

	// presentation
	Presentation string `json:"presentation,omitempty"`

	// type
	// Enum: [literal fh-attribute fh-type]
	Type string `json:"type,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this ticketing project field map external value entity
func (m *TicketingProjectFieldMapExternalValueEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ticketingProjectFieldMapExternalValueEntityTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["literal","fh-attribute","fh-type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ticketingProjectFieldMapExternalValueEntityTypeTypePropEnum = append(ticketingProjectFieldMapExternalValueEntityTypeTypePropEnum, v)
	}
}

const (

	// TicketingProjectFieldMapExternalValueEntityTypeLiteral captures enum value "literal"
	TicketingProjectFieldMapExternalValueEntityTypeLiteral string = "literal"

	// TicketingProjectFieldMapExternalValueEntityTypeFhDashAttribute captures enum value "fh-attribute"
	TicketingProjectFieldMapExternalValueEntityTypeFhDashAttribute string = "fh-attribute"

	// TicketingProjectFieldMapExternalValueEntityTypeFhDashType captures enum value "fh-type"
	TicketingProjectFieldMapExternalValueEntityTypeFhDashType string = "fh-type"
)

// prop value enum
func (m *TicketingProjectFieldMapExternalValueEntity) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ticketingProjectFieldMapExternalValueEntityTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TicketingProjectFieldMapExternalValueEntity) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ticketing project field map external value entity based on context it is used
func (m *TicketingProjectFieldMapExternalValueEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TicketingProjectFieldMapExternalValueEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TicketingProjectFieldMapExternalValueEntity) UnmarshalBinary(b []byte) error {
	var res TicketingProjectFieldMapExternalValueEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
