// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FieldMapEntity Update field map
//
// swagger:model FieldMapEntity
type FieldMapEntity struct {

	// available fields url
	AvailableFieldsURL string `json:"available_fields_url,omitempty"`

	// body
	Body string `json:"body,omitempty"`

	// connection id
	ConnectionID string `json:"connection_id,omitempty"`

	// connection type
	ConnectionType string `json:"connection_type,omitempty"`

	// data bag url
	DataBagURL string `json:"data_bag_url,omitempty"`

	// entity id
	EntityID string `json:"entity_id,omitempty"`

	// entity type
	EntityType string `json:"entity_type,omitempty"`

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this field map entity
func (m *FieldMapEntity) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this field map entity based on context it is used
func (m *FieldMapEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FieldMapEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FieldMapEntity) UnmarshalBinary(b []byte) error {
	var res FieldMapEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
