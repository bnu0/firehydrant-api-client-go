// Code generated by go-swagger; DO NOT EDIT.

package post_mortems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutV1PostMortemsReportsReportIDTagsParams creates a new PutV1PostMortemsReportsReportIDTagsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutV1PostMortemsReportsReportIDTagsParams() *PutV1PostMortemsReportsReportIDTagsParams {
	return &PutV1PostMortemsReportsReportIDTagsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1PostMortemsReportsReportIDTagsParamsWithTimeout creates a new PutV1PostMortemsReportsReportIDTagsParams object
// with the ability to set a timeout on a request.
func NewPutV1PostMortemsReportsReportIDTagsParamsWithTimeout(timeout time.Duration) *PutV1PostMortemsReportsReportIDTagsParams {
	return &PutV1PostMortemsReportsReportIDTagsParams{
		timeout: timeout,
	}
}

// NewPutV1PostMortemsReportsReportIDTagsParamsWithContext creates a new PutV1PostMortemsReportsReportIDTagsParams object
// with the ability to set a context for a request.
func NewPutV1PostMortemsReportsReportIDTagsParamsWithContext(ctx context.Context) *PutV1PostMortemsReportsReportIDTagsParams {
	return &PutV1PostMortemsReportsReportIDTagsParams{
		Context: ctx,
	}
}

// NewPutV1PostMortemsReportsReportIDTagsParamsWithHTTPClient creates a new PutV1PostMortemsReportsReportIDTagsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutV1PostMortemsReportsReportIDTagsParamsWithHTTPClient(client *http.Client) *PutV1PostMortemsReportsReportIDTagsParams {
	return &PutV1PostMortemsReportsReportIDTagsParams{
		HTTPClient: client,
	}
}

/*
PutV1PostMortemsReportsReportIDTagsParams contains all the parameters to send to the API endpoint

	for the put v1 post mortems reports report Id tags operation.

	Typically these are written to a http.Request.
*/
type PutV1PostMortemsReportsReportIDTagsParams struct {

	// ReportID.
	ReportID string

	// Tags.
	Tags []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put v1 post mortems reports report Id tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithDefaults() *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put v1 post mortems reports report Id tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithTimeout(timeout time.Duration) *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithContext(ctx context.Context) *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithHTTPClient(client *http.Client) *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithReportID adds the reportID to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithReportID(reportID string) *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetReportID(reportID)
	return o
}

// SetReportID adds the reportId to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetReportID(reportID string) {
	o.ReportID = reportID
}

// WithTags adds the tags to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) WithTags(tags []string) *PutV1PostMortemsReportsReportIDTagsParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the put v1 post mortems reports report Id tags params
func (o *PutV1PostMortemsReportsReportIDTagsParams) SetTags(tags []string) {
	o.Tags = tags
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1PostMortemsReportsReportIDTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param report_id
	if err := r.SetPathParam("report_id", o.ReportID); err != nil {
		return err
	}

	if o.Tags != nil {

		// binding items for tags
		joinedTags := o.bindParamTags(reg)

		// form array param tags
		if err := r.SetFormParam("tags", joinedTags...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPutV1PostMortemsReportsReportIDTags binds the parameter tags
func (o *PutV1PostMortemsReportsReportIDTagsParams) bindParamTags(formats strfmt.Registry) []string {
	tagsIR := o.Tags

	var tagsIC []string
	for _, tagsIIR := range tagsIR { // explode []string

		tagsIIV := tagsIIR // string as string
		tagsIC = append(tagsIC, tagsIIV)
	}

	// items.CollectionFormat: ""
	tagsIS := swag.JoinByFormat(tagsIC, "")

	return tagsIS
}
