// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPatchV1IntegrationsFieldMapsFieldMapIDParams creates a new PatchV1IntegrationsFieldMapsFieldMapIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1IntegrationsFieldMapsFieldMapIDParams() *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	return &PatchV1IntegrationsFieldMapsFieldMapIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithTimeout creates a new PatchV1IntegrationsFieldMapsFieldMapIDParams object
// with the ability to set a timeout on a request.
func NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithTimeout(timeout time.Duration) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	return &PatchV1IntegrationsFieldMapsFieldMapIDParams{
		timeout: timeout,
	}
}

// NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithContext creates a new PatchV1IntegrationsFieldMapsFieldMapIDParams object
// with the ability to set a context for a request.
func NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithContext(ctx context.Context) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	return &PatchV1IntegrationsFieldMapsFieldMapIDParams{
		Context: ctx,
	}
}

// NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithHTTPClient creates a new PatchV1IntegrationsFieldMapsFieldMapIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1IntegrationsFieldMapsFieldMapIDParamsWithHTTPClient(client *http.Client) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	return &PatchV1IntegrationsFieldMapsFieldMapIDParams{
		HTTPClient: client,
	}
}

/*
PatchV1IntegrationsFieldMapsFieldMapIDParams contains all the parameters to send to the API endpoint

	for the patch v1 integrations field maps field map Id operation.

	Typically these are written to a http.Request.
*/
type PatchV1IntegrationsFieldMapsFieldMapIDParams struct {

	// FieldMapID.
	//
	// Format: int32
	FieldMapID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 integrations field maps field map Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WithDefaults() *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 integrations field maps field map Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WithTimeout(timeout time.Duration) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WithContext(ctx context.Context) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WithHTTPClient(client *http.Client) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldMapID adds the fieldMapID to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WithFieldMapID(fieldMapID int32) *PatchV1IntegrationsFieldMapsFieldMapIDParams {
	o.SetFieldMapID(fieldMapID)
	return o
}

// SetFieldMapID adds the fieldMapId to the patch v1 integrations field maps field map Id params
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) SetFieldMapID(fieldMapID int32) {
	o.FieldMapID = fieldMapID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1IntegrationsFieldMapsFieldMapIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param field_map_id
	if err := r.SetPathParam("field_map_id", swag.FormatInt32(o.FieldMapID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
