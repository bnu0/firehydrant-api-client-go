// Code generated by go-swagger; DO NOT EDIT.

package checklist_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new checklist templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for checklist templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteV1ChecklistTemplatesID(params *DeleteV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteV1ChecklistTemplatesIDOK, error)

	GetV1ChecklistTemplates(params *GetV1ChecklistTemplatesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1ChecklistTemplatesOK, error)

	GetV1ChecklistTemplatesID(params *GetV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1ChecklistTemplatesIDOK, error)

	PatchV1ChecklistTemplatesID(params *PatchV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchV1ChecklistTemplatesIDOK, error)

	PostV1ChecklistTemplates(params *PostV1ChecklistTemplatesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostV1ChecklistTemplatesCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
DeleteV1ChecklistTemplatesID archives a checklist template

Archive a checklist template
*/
func (a *Client) DeleteV1ChecklistTemplatesID(params *DeleteV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteV1ChecklistTemplatesIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteV1ChecklistTemplatesIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteV1ChecklistTemplatesId",
		Method:             "DELETE",
		PathPattern:        "/v1/checklist_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteV1ChecklistTemplatesIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteV1ChecklistTemplatesIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteV1ChecklistTemplatesId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1ChecklistTemplates lists all checklist templates

List all of the checklist templates that have been added to the organization
*/
func (a *Client) GetV1ChecklistTemplates(params *GetV1ChecklistTemplatesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1ChecklistTemplatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1ChecklistTemplatesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getV1ChecklistTemplates",
		Method:             "GET",
		PathPattern:        "/v1/checklist_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1ChecklistTemplatesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1ChecklistTemplatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getV1ChecklistTemplates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1ChecklistTemplatesID retrieves a single checklist template

Retrieves a single checklist template by ID
*/
func (a *Client) GetV1ChecklistTemplatesID(params *GetV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1ChecklistTemplatesIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1ChecklistTemplatesIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getV1ChecklistTemplatesId",
		Method:             "GET",
		PathPattern:        "/v1/checklist_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1ChecklistTemplatesIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1ChecklistTemplatesIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getV1ChecklistTemplatesId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PatchV1ChecklistTemplatesID updates a checklist template

Update a checklist templates attributes
*/
func (a *Client) PatchV1ChecklistTemplatesID(params *PatchV1ChecklistTemplatesIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchV1ChecklistTemplatesIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchV1ChecklistTemplatesIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "patchV1ChecklistTemplatesId",
		Method:             "PATCH",
		PathPattern:        "/v1/checklist_templates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchV1ChecklistTemplatesIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchV1ChecklistTemplatesIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchV1ChecklistTemplatesId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostV1ChecklistTemplates creates a checklist template

Creates a checklist template for the organization
*/
func (a *Client) PostV1ChecklistTemplates(params *PostV1ChecklistTemplatesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostV1ChecklistTemplatesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostV1ChecklistTemplatesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postV1ChecklistTemplates",
		Method:             "POST",
		PathPattern:        "/v1/checklist_templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostV1ChecklistTemplatesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostV1ChecklistTemplatesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postV1ChecklistTemplates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
