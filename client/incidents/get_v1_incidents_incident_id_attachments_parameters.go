// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetV1IncidentsIncidentIDAttachmentsParams creates a new GetV1IncidentsIncidentIDAttachmentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1IncidentsIncidentIDAttachmentsParams() *GetV1IncidentsIncidentIDAttachmentsParams {
	return &GetV1IncidentsIncidentIDAttachmentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1IncidentsIncidentIDAttachmentsParamsWithTimeout creates a new GetV1IncidentsIncidentIDAttachmentsParams object
// with the ability to set a timeout on a request.
func NewGetV1IncidentsIncidentIDAttachmentsParamsWithTimeout(timeout time.Duration) *GetV1IncidentsIncidentIDAttachmentsParams {
	return &GetV1IncidentsIncidentIDAttachmentsParams{
		timeout: timeout,
	}
}

// NewGetV1IncidentsIncidentIDAttachmentsParamsWithContext creates a new GetV1IncidentsIncidentIDAttachmentsParams object
// with the ability to set a context for a request.
func NewGetV1IncidentsIncidentIDAttachmentsParamsWithContext(ctx context.Context) *GetV1IncidentsIncidentIDAttachmentsParams {
	return &GetV1IncidentsIncidentIDAttachmentsParams{
		Context: ctx,
	}
}

// NewGetV1IncidentsIncidentIDAttachmentsParamsWithHTTPClient creates a new GetV1IncidentsIncidentIDAttachmentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1IncidentsIncidentIDAttachmentsParamsWithHTTPClient(client *http.Client) *GetV1IncidentsIncidentIDAttachmentsParams {
	return &GetV1IncidentsIncidentIDAttachmentsParams{
		HTTPClient: client,
	}
}

/*
GetV1IncidentsIncidentIDAttachmentsParams contains all the parameters to send to the API endpoint

	for the get v1 incidents incident Id attachments operation.

	Typically these are written to a http.Request.
*/
type GetV1IncidentsIncidentIDAttachmentsParams struct {

	// AttachableType.
	AttachableType *string

	// IncidentID.
	IncidentID string

	// Page.
	//
	// Format: int32
	Page *int32

	// PerPage.
	//
	// Format: int32
	PerPage *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 incidents incident Id attachments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithDefaults() *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 incidents incident Id attachments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithTimeout(timeout time.Duration) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithContext(ctx context.Context) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithHTTPClient(client *http.Client) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttachableType adds the attachableType to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithAttachableType(attachableType *string) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetAttachableType(attachableType)
	return o
}

// SetAttachableType adds the attachableType to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetAttachableType(attachableType *string) {
	o.AttachableType = attachableType
}

// WithIncidentID adds the incidentID to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithIncidentID(incidentID string) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithPage adds the page to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithPage(page *int32) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetPage(page *int32) {
	o.Page = page
}

// WithPerPage adds the perPage to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WithPerPage(perPage *int32) *GetV1IncidentsIncidentIDAttachmentsParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get v1 incidents incident Id attachments params
func (o *GetV1IncidentsIncidentIDAttachmentsParams) SetPerPage(perPage *int32) {
	o.PerPage = perPage
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1IncidentsIncidentIDAttachmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttachableType != nil {

		// query param attachable_type
		var qrAttachableType string

		if o.AttachableType != nil {
			qrAttachableType = *o.AttachableType
		}
		qAttachableType := qrAttachableType
		if qAttachableType != "" {

			if err := r.SetQueryParam("attachable_type", qAttachableType); err != nil {
				return err
			}
		}
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage int32

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt32(qrPerPage)
		if qPerPage != "" {

			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
