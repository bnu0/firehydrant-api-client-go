// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutV1IncidentsIncidentIDLinksLinkIDParams creates a new PutV1IncidentsIncidentIDLinksLinkIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutV1IncidentsIncidentIDLinksLinkIDParams() *PutV1IncidentsIncidentIDLinksLinkIDParams {
	return &PutV1IncidentsIncidentIDLinksLinkIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithTimeout creates a new PutV1IncidentsIncidentIDLinksLinkIDParams object
// with the ability to set a timeout on a request.
func NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithTimeout(timeout time.Duration) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	return &PutV1IncidentsIncidentIDLinksLinkIDParams{
		timeout: timeout,
	}
}

// NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithContext creates a new PutV1IncidentsIncidentIDLinksLinkIDParams object
// with the ability to set a context for a request.
func NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithContext(ctx context.Context) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	return &PutV1IncidentsIncidentIDLinksLinkIDParams{
		Context: ctx,
	}
}

// NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithHTTPClient creates a new PutV1IncidentsIncidentIDLinksLinkIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutV1IncidentsIncidentIDLinksLinkIDParamsWithHTTPClient(client *http.Client) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	return &PutV1IncidentsIncidentIDLinksLinkIDParams{
		HTTPClient: client,
	}
}

/*
PutV1IncidentsIncidentIDLinksLinkIDParams contains all the parameters to send to the API endpoint

	for the put v1 incidents incident Id links link Id operation.

	Typically these are written to a http.Request.
*/
type PutV1IncidentsIncidentIDLinksLinkIDParams struct {

	// DisplayText.
	DisplayText *string

	// HrefURL.
	HrefURL *string

	// IconURL.
	IconURL *string

	// IncidentID.
	IncidentID string

	// LinkID.
	LinkID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put v1 incidents incident Id links link Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithDefaults() *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put v1 incidents incident Id links link Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithTimeout(timeout time.Duration) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithContext(ctx context.Context) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithHTTPClient(client *http.Client) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDisplayText adds the displayText to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithDisplayText(displayText *string) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetDisplayText(displayText)
	return o
}

// SetDisplayText adds the displayText to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetDisplayText(displayText *string) {
	o.DisplayText = displayText
}

// WithHrefURL adds the hrefURL to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithHrefURL(hrefURL *string) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetHrefURL(hrefURL)
	return o
}

// SetHrefURL adds the hrefUrl to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetHrefURL(hrefURL *string) {
	o.HrefURL = hrefURL
}

// WithIconURL adds the iconURL to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithIconURL(iconURL *string) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetIconURL(iconURL)
	return o
}

// SetIconURL adds the iconUrl to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetIconURL(iconURL *string) {
	o.IconURL = iconURL
}

// WithIncidentID adds the incidentID to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithIncidentID(incidentID string) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithLinkID adds the linkID to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WithLinkID(linkID string) *PutV1IncidentsIncidentIDLinksLinkIDParams {
	o.SetLinkID(linkID)
	return o
}

// SetLinkID adds the linkId to the put v1 incidents incident Id links link Id params
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) SetLinkID(linkID string) {
	o.LinkID = linkID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1IncidentsIncidentIDLinksLinkIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DisplayText != nil {

		// form param display_text
		var frDisplayText string
		if o.DisplayText != nil {
			frDisplayText = *o.DisplayText
		}
		fDisplayText := frDisplayText
		if fDisplayText != "" {
			if err := r.SetFormParam("display_text", fDisplayText); err != nil {
				return err
			}
		}
	}

	if o.HrefURL != nil {

		// form param href_url
		var frHrefURL string
		if o.HrefURL != nil {
			frHrefURL = *o.HrefURL
		}
		fHrefURL := frHrefURL
		if fHrefURL != "" {
			if err := r.SetFormParam("href_url", fHrefURL); err != nil {
				return err
			}
		}
	}

	if o.IconURL != nil {

		// form param icon_url
		var frIconURL string
		if o.IconURL != nil {
			frIconURL = *o.IconURL
		}
		fIconURL := frIconURL
		if fIconURL != "" {
			if err := r.SetFormParam("icon_url", fIconURL); err != nil {
				return err
			}
		}
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	// path param link_id
	if err := r.SetPathParam("link_id", o.LinkID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
